package com.kibet.order.bo;

import static org.junit.Assert.*;

import java.sql.SQLException;

import org.junit.Before;
import org.junit.Test;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import com.kibet.order.bo.exception.BOException;
import com.kibet.order.dao.OrderDAO;
import com.kibet.order.dto.Order;

import static org.mockito.Mockito.*;


public class OrderBOImplTest {
	
	@Mock
	OrderDAO dao;
	private OrderBOImpl bo;
	
	@Before
	public void setup(){
	MockitoAnnotations.initMocks(this);
	bo = new OrderBOImpl();
	bo.setDao(dao);
	}

	
	@Test
	public void placeOrder_Should_Return() throws SQLException, BOException{
		
		Order order =new Order();
		when(dao.create(order)).thenReturn(new Integer(1));
		
		boolean result =bo.placeOrder(order);
		assertTrue(result);
		

		verify(dao).create(order);
	}
	
	@Test
	public void placeOrder_Should_not_Return() throws SQLException, BOException{
				
		Order order =new Order();
		when(dao.create(order)).thenReturn(new Integer(0));
		
		boolean result =bo.placeOrder(order);
		assertFalse(result);
		

		verify(dao).create(order);
	}
	
	@Test(expected=BOException.class)
	public void placeOrder_Should_Throw_BOException() throws SQLException, BOException{
				
		Order order =new Order();
		when(dao.create(order)).thenThrow(SQLException.class);
		boolean result =bo.placeOrder(order);
		
	}

}
